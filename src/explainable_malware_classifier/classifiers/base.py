import os

import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay

from explainable_malware_classifier.settings import PLOTS_DIR


class BaseMalwareClassifier:
    def plot_confusion_matrix(
        self,
        y_true: pd.Series,
        y_pred: pd.Series,
        *,
        title: str,
        save_as: str | None = None,
    ) -> None:
        classes = self.label_encoder.classes_
        cm = confusion_matrix(y_true, y_pred, labels=classes, normalize="true")
        _, ax = plt.subplots(figsize=(5, 5))
        disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=classes)
        disp.plot(ax=ax, values_format=".2f")
        plt.title(title)
        plt.xticks(rotation=45)
        plt.tight_layout()
        if save_as is not None:
            plt.savefig(os.path.join(PLOTS_DIR, save_as), bbox_inches="tight")
        plt.show()

    @staticmethod
    def display_cv_results(scoring: str, scores: list[float]) -> None:
        print(f"Cross-Validation {scoring} scores:", [round(s, 4) for s in scores])
        print(f"Cross-Validation {scoring} mean:   {np.mean(scores):.4f}")
        print(f"Cross-Validation {scoring} std:    {np.std(scores, ddof=1):.4f}")
        print("-" * 50)
